// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model User {
  id        String   @id @default(cuid())
  email     String  @unique
  clerkId   String   @unique
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @default(now()) @map("updated_at")

  name          String?

  // customer Customer?
  // sessions Session[]

  @@map("users")
}

// model Session {
//   id           String   @id @default(cuid())
//   sessionToken String   @unique @map("session_token")
//   userId       String   @map("user_id")
//   expires      DateTime
//   createdAt    DateTime @default(now()) @map("created_at")
//   updatedAt    DateTime @default(now()) @map("updated_at")
//   user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

//   @@map("sessions")
//   @@index([userId])
// }
// model checkout_session {
//   id                                            String          @id
//   amount_subtotal                               BigInt?
//   amount_total                                  BigInt?
//   billing_address_collection                    String?
//   cancel_url                                    String?
//   client_reference_id                           String?
//   currency                                      String?
//   customer_id                                   String?
//   customer_email                                String?
//   livemode                                      Boolean?
//   locale                                        String?
//   metadata                                      Json?
//   mode                                          String?
//   object                                        String?
//   payment_intent_id                             String?
//   payment_method_types                          String[]
//   payment_status                                String?
//   setup_intent_id                               String?
//   submit_type                                   String?
//   subscription_id                               String?
//   success_url                                   String?
//   shipping_address                              Json?
//   shipping_carrier                              String?
//   shipping_name                                 String?
//   shipping_phone                                String?
//   shipping_tracking_number                      String?
//   total_details_amount_discount                 BigInt?
//   total_details_amount_shipping                 BigInt?
//   total_details_amount_tax                      BigInt?
//   total_details_breakdown                       Json?
//   customer_details_email                        String?
//   customer_details_tax_exempt                   String?
//   customer_details_tax_ids                      Json?
//   shipping_address_collection_allowed_countries String[]
//   payment_method_options_acss_debit             Json?
//   customer                                      Customer?       @relation(fields: [customer_id], references: [id])
//   payment_intent                                payment_intent? @relation(fields: [payment_intent_id], references: [id])
//   setup_intent                                  setup_intent?   @relation(fields: [setup_intent_id], references: [id])
// }

// model Customer {
//   id        String   @id @default(cuid())
//   userId    String   @unique(map: "customers_user_id_unique") @map("user_id")
//   createdAt DateTime @default(now()) @map("created_at")
//   updatedAt DateTime @default(now()) @map("updated_at")
//   user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)

//   @@map("customers")
// }

// model Address {

// }

// model Product {
//   id          String   @id @default(cuid())
//   active      Boolean  @default(false)
//   name        String
//   description String?
//   image       String?
//   metadata    Json?
//   createdAt   DateTime @default(now()) @map("created_at")
//   updatedAt   DateTime @default(now()) @map("updated_at")
//   prices      Price[]

//   @@map("products")
// }

// model Price {
//   id         String   @id @default(cuid())
//   productId  String   @map("product_id")
//   active     Boolean  @default(false)
//   currency   String
//   unitAmount Int?     @map("unit_amount")
//   createdAt  DateTime @default(now()) @map("created_at")
//   updatedAt  DateTime @default(now()) @map("updated_at")
//   product    Product  @relation(fields: [productId], references: [id], onDelete: Cascade)

//   @@map("prices")
//   @@index([productId])
// }
